{"version":3,"sources":["components/Form.js","services/productService.js","App.js","reportWebVitals.js","index.js"],"names":["ProductForm","props","state","title","description","onChangeHandler","bind","event","this","setState","target","name","value","console","log","req","res","fetch","method","body","JSON","stringify","headers","then","json","catch","err","onSubmit","postProduct","for","type","placeholder","onChange","Component","getAll","a","axios","get","data","App","useState","products","setproducts","useEffect","getProducts","productService","className","length","map","product","_id","renderProduct","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+PAEqBA,E,kDAEjB,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,MAAO,GACPC,YAAa,IAEjB,EAAKC,gBAAkB,EAAKA,gBAAgBC,KAArB,gBANR,E,4DASHC,GACZC,KAAKC,SAAL,eACKF,EAAMG,OAAOC,KAAOJ,EAAMG,OAAOE,QAEtCC,QAAQC,IAAIN,KAAKN,MAAMC,OACvBU,QAAQC,IAAIN,KAAKN,MAAME,e,kCAGfW,EAAKC,GACbC,MAAM,eAAgB,CAClBC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACjBlB,MAAOK,KAAKN,MAAMC,MAClBC,YAAaI,KAAKN,MAAME,cAE5BkB,QAAS,CACL,OAAU,mBACV,eAAgB,sBAGvBC,KAAKP,EAAIQ,QACTC,OAAM,SAACC,GACJV,EAAIQ,KAAKE,Q,+BAKb,OACI,uBAAMC,SAAUnB,KAAKoB,YAAYtB,KAAKE,MAAtC,UACI,uBAAOqB,IAAI,QAAX,4BAAyC,uBACrC,uBAAOC,KAAK,OAAOnB,KAAK,QAAQoB,YAAY,qBAAqBC,SAAUxB,KAAKH,kBAAmB,uBACvG,uBAAOwB,IAAI,cAAX,mCACI,uBAAOC,KAAK,OAAOnB,KAAK,cAAcoB,YAAY,8BAA8BC,SAAUxB,KAAKH,kBAAmB,uBACtH,uBAAOyB,KAAK,SAASlB,MAAM,kB,GA5CFqB,a,iBCA1B,GACbC,OAAO,WAAD,4BAAE,4BAAAC,EAAA,sEACUC,IAAMC,IAAN,gBADV,cACFrB,EADE,yBAECA,EAAIsB,MAAQ,IAFb,2CAAF,kDAAC,ICyCMC,MAtCf,WAAgB,IAAD,EACmBC,mBAAS,MAD5B,mBACNC,EADM,KACIC,EADJ,KAGbC,qBAAU,WACJF,GACFG,OAIJ,IAAMA,EAAW,uCAAG,4BAAAT,EAAA,sEACFU,EAAeX,SADb,OACdlB,EADc,OAElBH,QAAQC,IAAIE,GACZ0B,EAAY1B,GAHM,2CAAH,qDAejB,OACE,sBAAK8B,UAAU,MAAf,UACE,cAAC,EAAD,IACA,oBAAIA,UAAU,OAAd,SACIL,GAAYA,EAASM,OAAS,EAC9BN,EAASO,KAAI,SAAAC,GAAO,OAdN,SAAAA,GACpB,OACE,qBAAsBH,UAAU,qBAAhC,UACE,oBAAIA,UAAU,gBAAd,SAA+BG,EAAQtC,OACvC,mBAAGmC,UAAU,uBAAb,SAAqCG,EAAQ7C,gBAFtC6C,EAAQC,KAYWC,CAAcF,MAEtC,wDCzBKG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB/B,MAAK,YAAkD,IAA/CgC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.8daf2b1d.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nexport default class ProductForm extends Component {\r\n  \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            title: \"\",\r\n            description: \"\"\r\n        }\r\n        this.onChangeHandler = this.onChangeHandler.bind(this);\r\n    }\r\n\r\n    onChangeHandler(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n        console.log(this.state.title);\r\n        console.log(this.state.description)\r\n    }\r\n\r\n    postProduct(req, res) {\r\n        fetch('/api/product', {\r\n            method: 'post',\r\n            body: JSON.stringify({\r\n                title: this.state.title,\r\n                description: this.state.description\r\n            }),\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        .then(res.json())\r\n        .catch((err) => {\r\n            res.json(err)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.postProduct.bind(this)}> \r\n                <label for=\"title\">Product Name: </label><br />\r\n                    <input type=\"text\" name=\"title\" placeholder=\"Enter product name\" onChange={this.onChangeHandler} /><br />\r\n                <label for=\"description\">Product Description: </label>\r\n                    <input type=\"text\" name=\"description\" placeholder=\"Enter product's description\" onChange={this.onChangeHandler} /><br />\r\n                <input type=\"submit\" value=\"Submit\" />\r\n            </form>\r\n        )\r\n    }\r\n}\r\n","import axios from 'axios';\r\n\r\nexport default {\r\n  getAll: async () => {\r\n    let res = await axios.get(`/api/product`);\r\n    return res.data || [];\r\n  }\r\n}","import React, { useState, useEffect } from \"react\";\nimport ProductForm from \"./components/Form\";\n\n// SERVICES\nimport productService from './services/productService';\n\nfunction App() {\n  const [products, setproducts] = useState(null);\n\n  useEffect(() => {\n    if(!products) {\n      getProducts();\n    }\n  })\n\n  const getProducts = async () => {\n    let res = await productService.getAll();\n    console.log(res);\n    setproducts(res);\n  }\n\n  const renderProduct = product => {\n    return (\n      <li key={product._id} className=\"list__item product\">\n        <h3 className=\"product__name\">{product.name}</h3>\n        <p className=\"product__description\">{product.description}</p>\n      </li>\n    );\n  };\n\n  return (\n    <div className=\"App\">\n      <ProductForm />\n      <ul className=\"list\">\n        {(products && products.length > 0) ? (\n          products.map(product => renderProduct(product))\n        ) : (\n          <p>No products found</p>\n        )}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}