{"version":3,"sources":["components/Pastries/Form.js","services/pastriesService.js","App.js","reportWebVitals.js","index.js"],"names":["PastriesForm","props","state","title","description","price","imageURL","onChangeHandler","bind","event","this","setState","target","name","value","console","log","req","res","fetch","method","body","JSON","stringify","headers","then","json","catch","err","onSubmit","postPastries","type","placeholder","Component","getAll","a","axios","get","response","data","App","useState","pastry","setPastry","useEffect","getPastry","pastriesService","length","map","_id","renderPastry","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+PAEqBA,E,kDAEjB,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,MAAO,GACPC,YAAa,GACbC,MAAO,GACPC,SAAU,IAEd,EAAKC,gBAAkB,EAAKA,gBAAgBC,KAArB,gBARR,E,4DAUHC,GACZC,KAAKC,SAAL,eACKF,EAAMG,OAAOC,KAAOJ,EAAMG,OAAOE,QAEtCC,QAAQC,IAAIN,KAAKR,MAAMC,OACvBY,QAAQC,IAAIN,KAAKR,MAAME,aACvBW,QAAQC,IAAIN,KAAKR,MAAMG,OACvBU,QAAQC,IAAIN,KAAKR,MAAMI,Y,mCAEdW,EAAKC,GACdC,MAAM,gBAAiB,CACnBC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACjBpB,MAAOO,KAAKR,MAAMC,MAClBC,YAAaM,KAAKR,MAAME,YACxBC,MAAOK,KAAKR,MAAMG,MAClBC,SAAUI,KAAKR,MAAMI,WAEzBkB,QAAS,CACL,OAAU,mBACV,eAAgB,sBAGvBC,KAAKP,EAAIQ,QACTC,OAAM,SAACC,GACJV,EAAIQ,KAAKE,Q,+BAIb,OACI,uBAAMC,SAAUnB,KAAKoB,aAAatB,KAAKE,MAAvC,UACI,oEACA,oDAA8B,uBAC1B,uBAAOqB,KAAK,OAAOlB,KAAK,QAAQmB,YAAY,8CAA8C,uBAC9F,kDAA4B,uBACxB,uBAAOD,KAAK,OAAOlB,KAAK,cAAcmB,YAAY,+BAA+B,uBACrF,4CAAsB,uBAClB,uBAAOD,KAAK,OAAOlB,KAAK,QAAQmB,YAAY,2BAA2B,uBAC3E,oDAA8B,uBAC1B,uBAAOD,KAAK,OAAOlB,KAAK,WAAWmB,YAAY,uDAAuD,8B,GAnDhFC,a,iBCA3B,GACbC,OAAO,WAAD,4BAAE,4BAAAC,EAAA,sEACeC,IAAMC,IAAN,iBADf,cACFC,EADE,yBAECA,EAASC,MAAQ,IAFlB,2CAAF,kDAAC,IC6CMC,MA5Cf,WAAgB,IAAD,EACeC,mBAAS,MADxB,mBACNC,EADM,KACEC,EADF,KAGbC,qBAAU,WACJF,GACFG,OAIJ,IAAMA,EAAS,uCAAG,4BAAAV,EAAA,sEACKW,EAAgBZ,SADrB,OACZI,EADY,OAEhBvB,QAAQC,IAAIsB,GACZK,EAAUL,GAHM,2CAAH,qDAmBf,OACE,+BACE,cAAC,EAAD,IAEGI,GAAUA,EAAOK,OAAS,EAC1BL,EAAOM,KACN,SAAAN,GAAM,OAnBO,SAAAA,GACnB,OACE,+BACE,6BAAKA,EAAOvC,QACZ,8BACGuC,EAAOtC,YAAY,uBACnBsC,EAAOrC,MAAM,uBACbqC,EAAOpC,SAAS,4BALZoC,EAAOO,KAiBFC,CAAaR,MAGvB,iEC7BKS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB5B,MAAK,YAAkD,IAA/C6B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.045bd6a5.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport default class PastriesForm extends Component { \r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            title: \"\", \r\n            description: \"\", \r\n            price: \"\", \r\n            imageURL: \"\"\r\n        }\r\n        this.onChangeHandler = this.onChangeHandler.bind(this);\r\n    }\r\n    onChangeHandler(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n        console.log(this.state.title);\r\n        console.log(this.state.description);\r\n        console.log(this.state.price);\r\n        console.log(this.state.imageURL);\r\n    }\r\n    postPastries(req, res) {\r\n        fetch('/api/pastries', {\r\n            method: 'post', \r\n            body: JSON.stringify({\r\n                title: this.state.title, \r\n                description: this.state.description, \r\n                price: this.state.price, \r\n                imageURL: this.state.imageURL \r\n            }),\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        .then(res.json())\r\n        .catch((err) => {\r\n            res.json(err)\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.postPastries.bind(this)}>\r\n                <h3>Post Pastries for Your Coffee Shop</h3>\r\n                <label>Pastry's Name: </label><br />\r\n                    <input type=\"text\" name=\"title\" placeholder=\"What are you baking to make life sweeter?\" /><br />\r\n                <label>Description: </label><br />\r\n                    <input type=\"text\" name=\"description\" placeholder=\"What's in your baked good?\" /><br />\r\n                <label>Price: </label><br />\r\n                    <input type=\"text\" name=\"price\" placeholder=\"How much will it cost?\" /><br />\r\n                <label>Image Address: </label><br />\r\n                    <input type=\"text\" name=\"imageURL\" placeholder=\"Do you have the address where the image is posted?\" /><br />\r\n            </form>\r\n        )\r\n    }\r\n}","import axios from \"axios\";\r\n\r\nexport default {\r\n  getAll: async () => {\r\n    let response = await axios.get(`/api/pastries`);\r\n    return response.data || [];\r\n  }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\nimport PastriesForm from './components/Pastries/Form';\nimport pastriesService from './services/pastriesService';\n\nfunction App() {\n  const [pastry, setPastry] = useState(null);\n\n  useEffect(() => {\n    if(!pastry) {\n      getPastry();\n    }\n  });\n\n  const getPastry = async () => {\n    let response = await pastriesService.getAll();\n    console.log(response);\n    setPastry(response);\n  }\n\n  const renderPastry = pastry => {\n    return (\n      <li key={pastry._id}>\n        <h5>{pastry.title}</h5>\n        <p>\n          {pastry.description}<br />\n          {pastry.price}<br />\n          {pastry.imageURL}<br />\n        </p>\n      </li>\n    )\n  }\n\n  return(\n    <ul>\n      <PastriesForm />\n      {\n        (pastry && pastry.length > 0) ? \n        (pastry.map(\n          pastry => renderPastry(pastry)\n        )) :\n        (\n          <p>No Pastries Have Been Logged</p>\n        )\n      }\n    </ul>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}